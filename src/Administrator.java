/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Acer
 */
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class Administrator extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement ppst = null;
   
    /**
     * Creates new form Administrator
     */
    public Administrator() {
        initComponents();
        conn = connector.ConnectDB();
        //showComb();
    }
    private void UpdateTable(){
        try{
            String sql = "SELECT b.Book_id, b.Title, o.Author_name, c.Branch_id, c.No_of_copies, al.Available, o.Type"
                    + " FROM BOOK AS b, OVERALL_AUTHORS AS o, BOOK_COPIES AS c, BOOK_AVAILABLE AS al"
                    +" WHERE b.Book_id = c.Book_id AND o.Book_id = c.Book_id AND c.Book_id = al.Book_id AND al.Branch_id = c.Branch_id";
            
            ppst = conn.prepareStatement(sql);
            rs = ppst.executeQuery();
            admin_table.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void showBorrowerInfo(){
        try{
            String sql = "SELECT * FROM BORROWERS";
            ppst = conn.prepareStatement(sql);
            rs = ppst.executeQuery();
            admin_table.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void closeFrame(){
        WindowEvent closingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closingEvent);
    }
    /*
    ** check whether returned or not
    */
//    private boolean checkReturn(){
//        try{
//            String check = "SELECT";
//        }
//    }
    /*
    * fine calculation
    */
    private void showfine(){
        try{
            String sql = "SELECT * from fines"
                    + " group by card_no, loan_id";
            ppst = conn.prepareStatement(sql);
            rs = ppst.executeQuery();
            admin_table.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private boolean late(){
        try{
            String late = "select datediff(current_date, date_add(l.date_out, interval 14 day)) "
                    + "from book_loans as l, fines "
                    + "where fines.paid = 'false' and fines.loan_id = l.loan_id";
            ppst = conn.prepareStatement(late);
            rs = ppst.executeQuery();
            if(rs.next()){
                if(rs.getInt(1)>0){
                    //System.out.println(rs.getInt(1));
                    //System.out.println("true");
                    return true;
                }else{
                    //System.out.println("false");
                    return false;
                }
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return true;
    }
    /*
    ** calculate fine amount before check-in
    */
    private void calbefore(){
        if(late()){
            //System.out.println("false");
            try{
            String before = "update fines "
                    + "set fines.fine_amt = "
                    + "(select datediff(CURRENT_DATE, DATE_ADD(l.date_out, INTERVAL 14 DAY))*0.25 "
                    + "from book_loans as l "
                    + "where l.loan_id = fines.loan_id and fines.paid = 'false') "
                    + "where paid = 'false'";
            
            ppst = conn.prepareStatement(before);
            ppst.executeUpdate();
            }catch(Exception e){
                e.printStackTrace();
            }
        }else{
            showfine();
        } 
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        admin_table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        bookButton = new javax.swing.JButton();
        borButton = new javax.swing.JButton();
        fineButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        SearchMenu = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        outMenu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        inMenu = new javax.swing.JMenuItem();
        addMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        admin_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(admin_table);

        bookButton.setText("Book");
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });

        borButton.setText("Borrower");
        borButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borButtonActionPerformed(evt);
            }
        });

        fineButton.setText("Fines");
        fineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fineButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("Functions");

        SearchMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_MASK));
        SearchMenu.setText("Search");
        SearchMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchMenuActionPerformed(evt);
            }
        });
        jMenu1.add(SearchMenu);
        jMenu1.add(jSeparator1);

        outMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.CTRL_MASK));
        outMenu.setText("Check-out");
        outMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outMenuActionPerformed(evt);
            }
        });
        jMenu1.add(outMenu);
        jMenu1.add(jSeparator2);

        inMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_MASK));
        inMenu.setText("Check-in");
        inMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inMenuActionPerformed(evt);
            }
        });
        jMenu1.add(inMenu);

        addMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        addMenu.setText("Add");
        addMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuActionPerformed(evt);
            }
        });
        jMenu1.add(addMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(borButton, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(fineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(bookButton)
                .addGap(18, 18, 18)
                .addComponent(borButton)
                .addGap(18, 18, 18)
                .addComponent(fineButton)
                .addGap(62, 62, 62)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMenuActionPerformed
        // TODO add your handling code here:
        SearchJframe sjf = new SearchJframe();
        sjf.setVisible(true);
       
    }//GEN-LAST:event_SearchMenuActionPerformed

    private void outMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outMenuActionPerformed
        // TODO add your handling code here:
        CheckJframe cjf = new CheckJframe();
        cjf.setVisible(true);
    }//GEN-LAST:event_outMenuActionPerformed

    private void inMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inMenuActionPerformed
        // TODO add your handling code here:
        CheckinJframe cijf = new CheckinJframe();
        cijf.setVisible(true);
    }//GEN-LAST:event_inMenuActionPerformed

    private void addMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuActionPerformed
        // TODO add your handling code here:
        NewJframe njf = new NewJframe();
        njf.setVisible(true);
    }//GEN-LAST:event_addMenuActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        // TODO add your handling code here:
        UpdateTable();
    }//GEN-LAST:event_bookButtonActionPerformed

    private void borButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borButtonActionPerformed
        // TODO add your handling code here:
        showBorrowerInfo();
    }//GEN-LAST:event_borButtonActionPerformed

    private void fineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fineButtonActionPerformed
        // TODO add your handling code here:
        
        calbefore();
        showfine();
    }//GEN-LAST:event_fineButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        calbefore();
        showfine();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem SearchMenu;
    private javax.swing.JMenuItem addMenu;
    private javax.swing.JTable admin_table;
    private javax.swing.JButton bookButton;
    private javax.swing.JButton borButton;
    private javax.swing.JButton fineButton;
    private javax.swing.JMenuItem inMenu;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem outMenu;
    // End of variables declaration//GEN-END:variables
}
